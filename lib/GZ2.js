var rule = {
    title: '瓜子',
    host: 'https://api.8utdtcq.com',
    url: 'https://api.8utdtcq.com/App/IndexList/indexList',
    searchUrl: 'https://api.8utdtcq.com/App/Index/findMoreVod#**',
    searchable: 2,
    quickSearch: 1,
    filterable: 1,
    class_name: '剧集&电影&动漫&综艺&短剧',
    class_url: '2&1&4&3&64',
    filter: 'H4sIAAAAAAAAA+2a7U4aQRSG/3sVht/bZHf5WnorjWlo4YfphwlqE2NMtGoLWIsmFbRi2qYqoBgxtVVR8GZ2duUuOmchfuDuDHI2xJhD4hGYyTzv7hlm57yZ6aFh/gpogefDL5y38Jq+fuc0vklO8eZAPJWMB5S7Te/j75JebR/ibyeTd8Z1H/9mMBiJLZZb8+WusW7GhC5q4F7jzP3+Qsh2qbXxSQjpdMGSWrsb1umhkNTpgr6mXM06a4qvqd0FS7KqJbv5VUgyLxfsRsHKHyos+9NauuR3U2HNE7bZUKyFHP/E0hXF+rPmfOEMp/A/+HS1dOT827m0cwd2ZgOvtrBjFatCtZ0u6Fz/qHDp4ly3u2BJ5mmRLRfM+ndxupdrrL6rWPkaTwLb+sVveA3ubatStbZ2+B2GAdDTbvGfeZ4X62h3uU+6883I9adbCtxXoqlkPOW1Erm1PeKVSFf1kBDhdPCBEpRRgn5QdBlF94OiySiaHxRVRvEj+1pMQuEdfKAYMorhByUqo0T9oERklAiaoqnPtDA7O5aRwgoPIQhBCDoEDQJ+aqgq55vnvyUSVJXjVGCqQFdBhwqKVNCmRiBEIRgQ8HMp1ossLRZTFR40CDqEIIQQhDCECIQoBAMCXpbRmywDZBkgywBZBsgyQJYBsgyQZYAsA2QZeFnW5rFVqIhT6ONzcXzylddj0aXpET8VWbZsNop25rOIE0Zn52PVzq9KKHoMfTH5IsuUJJgIlmKnj6z5RQkliqaUVtnZuYRioBMzt2LN5iUUfF4yJfkd01T0xaTXzXpGhtF8+MnY32SZCeKnWX2PNdZkvxn0TbPnmq3vTdnVoCeanT20G3uyn6ZLbvpeocdSE55LtEtbf2u0fX7BVtLCNTrxcjSBf7wVZ3lxKeHEE4mJUX6FPsDs+QMJbPz1WAqPau2vs7TYHvJGeU0N591Ie0z+1H80fluxxr7UyW8jv438Nk8S+W2D8NugghOnk/y2Lgr5bQ+kkN9GfpurBPLbHiKL/LaB+W2bDbNeYpmS0D7Q/dk3yzBBfzbNMkzInx2zDIM3EJ19rAyD9lzam1gZBu3tWX9P2HZehsGbe86mWIZBu3vXu3ChteOC6XsxIGsHAXs61k6IrJ0uCFk7niSydtxJZO146CBrxxNC1g5ZO0IKWTvdFLJ2bkkga4esnYFaO+bpAVTC2bJ1sS8854A/g9I2KuQk9DGU4Y71Ike5eEl9J4tKbwTs6ZTeQSq9uyBUenuSqPR2J1Hp7aGDSm9PCJXeVHoLKVR6d1Oo9L4lgUpvKr0He6rC2Rfziu4qI9yl6+iDFXCqIlfrgYQ+W8H3f3xj1gPJp+MVPZBcTlj0PSuoxkfAnkCNPzTzH+StPxCsRAAA',
    play_parse: true,
    lazy: "js:\r\n        let d = [];\r\n        //console.log(\"wangzhi===\"+input)\r\n        var vod_id = input.split(\"/\")[0];\r\n        var vurl_id = input.split(\"/\")[1];\r\n        var resolution=input.split(\"?\")[1]\r\n        function Encrypt(plainText) {\r\n            let key = CryptoJS.enc.Utf8.parse(\"mvXBSW7ekreItNsT\");\r\n            let iv = CryptoJS.enc.Utf8.parse(\"2U3IrJL8szAKp0Fj\");\r\n            // 将文本加密为 AES/CBC/PKCS5Padding 格式\r\n            let encrypted = CryptoJS.AES.encrypt(plainText, key, {\r\n                iv: iv,\r\n                mode: CryptoJS.mode.CBC,\r\n                padding: CryptoJS.pad.Pkcs7\r\n            });\r\n\r\n            // 获取加密结果并转为 Hex 格式\r\n            let encryptedHex = encrypted.ciphertext.toString(CryptoJS.enc.Hex);\r\n            return encryptedHex.toUpperCase(); // 返回大写 Hex 格式\r\n        }\r\n        function Decrypt(word, key, iv) {\r\n            let encryptedHexStr = CryptoJS.enc.Hex.parse(word);\r\n\r\n            // 使用AES/CBC/PKCS5Padding模式进行解密\r\n            let decrypt = CryptoJS.AES.decrypt({\r\n                ciphertext: encryptedHexStr\r\n            }, key, {\r\n                iv: iv,\r\n                mode: CryptoJS.mode.CBC, // 使用CBC模式\r\n                padding: CryptoJS.pad.Pkcs7 // 使用PKCS#7填充\r\n            });\r\n\r\n            // 将解密后的数据转换为原始文本\r\n            let decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\r\n\r\n            // 返回解密后的文本\r\n            return decryptedStr;\r\n        }\r\n        var timestamp = new Date().getTime() / 1000; //log(timestamp)\r\n        var t = timestamp.toString().split('.')[0]; //log(t)\r\n        var request_key = JSON.stringify({\r\n            \"domain_type\": \"8\",\r\n            \"vod_id\": vod_id,\r\n            \"type\": \"play\",\r\n            \"resolution\": resolution,\r\n            \"vurl_id\": vurl_id\r\n        }); //log(request_key)\r\n        var request_key2 = Encrypt(request_key); //log(request_key2)\r\n        var signature = 'token_id=,token=1be86e8e18a9fa18b2b8d5432699dad0.ac008ed650fd087bfbecf2fda9d82e9835253ef24843e6b18fcd128b10763497bcf9d53e959f5377cde038c20ccf9d17f604c9b8bb6e61041def86729b2fc7408bd241e23c213ac57f0226ee656e2bb0a583ae0e4f3bf6c6ab6c490c9a6f0d8cdfd366aacf5d83193671a8f77cd1af1ff2e9145de92ec43ec87cf4bdc563f6e919fe32861b0e93b118ec37d8035fbb3c.59dd05c5d9a8ae726528783128218f15fe6f2c0c8145eddab112b374fcfe3d79,phone_type=1,request_key=' + request_key2 + ',app_id=1,time=' + t + ',keys=ZH8gpdp9bxjuG2NK97sol3o7Uiz+9eVEaVMlE2Fk3j7EResM3YHnECZUH7BONNTjpy7RVNi/YimGuNYriC7Cmswv4PNYiFYzw9QhlqZKwNfCM6IUpFZ0T4rZx8G78zkv2tNVbfYC4qNQedGi07nWZ33dlSuVxROVfY5JxOWHMI0=*&zvdvdvddbfikkkumtmdwqppp?|4Y!s!2br'; //log(signature)\r\n        var signature2 = md5(signature); //log(signature2)\r\n        var body = 'token=1be86e8e18a9fa18b2b8d5432699dad0.ac008ed650fd087bfbecf2fda9d82e9835253ef24843e6b18fcd128b10763497bcf9d53e959f5377cde038c20ccf9d17f604c9b8bb6e61041def86729b2fc7408bd241e23c213ac57f0226ee656e2bb0a583ae0e4f3bf6c6ab6c490c9a6f0d8cdfd366aacf5d83193671a8f77cd1af1ff2e9145de92ec43ec87cf4bdc563f6e919fe32861b0e93b118ec37d8035fbb3c.59dd05c5d9a8ae726528783128218f15fe6f2c0c8145eddab112b374fcfe3d79&token_id=&phone_type=1&time=' + t + '&phone_model=xiaomi-22021211rc&keys=ZH8gpdp9bxjuG2NK97sol3o7Uiz%2B9eVEaVMlE2Fk3j7EResM3YHnECZUH7BONNTjpy7RVNi%2FYimGuNYriC7Cmswv4PNYiFYzw9QhlqZKwNfCM6IUpFZ0T4rZx8G78zkv2tNVbfYC4qNQedGi07nWZ33dlSuVxROVfY5JxOWHMI0%3D&request_key=' + request_key2 + '&signature=' + signature2 + '&app_id=1&ad_version=1'; //log(body)\r\n\r\n        var html = fetch('https://api.8utdtcq.com/App/Resource/VurlDetail/showOne', {\r\n            headers: {\r\n                'Cache-Control': 'no-cache',\r\n                'Version': '2406025',\r\n                'PackageName': 'com.uf076bf0c246.qe439f0d5e.m8aaf56b725a.ifeb647346f',\r\n                'Ver': '1.9.2',\r\n                'Referer': 'https://api.8utdtcq.com',\r\n                'X-Customer-Client-Ip': '127.0.0.1',\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Host': 'api.8utdtcq.com',\r\n                'Connection': 'Keep-Alive',\r\n                //'Accept-Encoding': 'gzip',\r\n                'User-Agent': 'okhttp/3.12.0'\r\n            },\r\n            body: body,\r\n            method: 'POST',           \r\n            rejectCoding: true\r\n        }); //log(html)\r\n\r\n        var data = JSON.parse(html).data;\r\n        // //console.log(\"dddddd=====\"+JSON.stringify(data))\r\n        var response_key = data.response_key; //log(response_key)\r\n        var keys = data.keys; //log(keys)\r\n\r\n        var bodykey = \"MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGAe6hKrWLi1zQmjTT1ozbE4QdFeJGNxubxld6GrFGximxfMsMB6BpJhpcTouAqywAFppiKetUBBbXwYsYU1wNr648XVmPmCMCy4rY8vdliFnbMUj086DU6Z+/oXBdWU3/b1G0DN3E9wULRSwcKZT3wj/cCI1vsCm3gj2R5SqkA9Y0CAwEAAQKBgAJH+4CxV0/zBVcLiBCHvSANm0l7HetybTh/j2p0Y1sTXro4ALwAaCTUeqdBjWiLSo9lNwDHFyq8zX90+gNxa7c5EqcWV9FmlVXr8VhfBzcZo1nXeNdXFT7tQ2yah/odtdcx+vRMSGJd1t/5k5bDd9wAvYdIDblMAg+wiKKZ5KcdAkEA1cCakEN4NexkF5tHPRrR6XOY/XHfkqXxEhMqmNbB9U34saTJnLWIHC8IXys6Qmzz30TtzCjuOqKRRy+FMM4TdwJBAJQZFPjsGC+RqcG5UvVMiMPhnwe/bXEehShK86yJK/g/UiKrO87h3aEu5gcJqBygTq3BBBoH2md3pr/W+hUMWBsCQQChfhTIrdDinKi6lRxrdBnn0Ohjg2cwuqK5zzU9p/N+S9x7Ck8wUI53DKm8jUJE8WAG7WLj/oCOWEh+ic6NIwTdAkEAj0X8nhx6AXsgCYRql1klbqtVmL8+95KZK7PnLWG/IfjQUy3pPGoSaZ7fdquG8bq8oyf5+dzjE/oTXcByS+6XRQJAP/5ciy1bL3NhUhsaOVy55MHXnPjdcTX0FaLi+ybXZIfIQ2P4rb19mVq1feMbCXhz+L1rG8oat5lYKfpe8k83ZA==\"; //log(bodykey)\r\n        var bodykeyiv = JSON.parse(RSA.decode(keys, bodykey)); //log(bodykeyiv)\r\n        var key = CryptoJS.enc.Utf8.parse(bodykeyiv.key); //log(key)\r\n        var iv = CryptoJS.enc.Utf8.parse(bodykeyiv.iv); //log(iv)\r\n        var html2 = Decrypt(response_key, key, iv); //log(html2)\r\n        var url = JSON.parse(html2).url; //log(url)\r\n        input = {\r\n            url: url,\r\n            parse: 0,\r\n            header: rule.headers\r\n        }\r\n        setResult(d)\r\n    ",
    一级: "js:\r\n        let d = [];\r\n        function Encrypt(plainText) {\r\n            let key = CryptoJS.enc.Utf8.parse(\"mvXBSW7ekreItNsT\");\r\n            let iv = CryptoJS.enc.Utf8.parse(\"2U3IrJL8szAKp0Fj\");\r\n            // 将文本加密为 AES/CBC/PKCS5Padding 格式\r\n            let encrypted = CryptoJS.AES.encrypt(plainText, key, {\r\n                iv: iv,\r\n                mode: CryptoJS.mode.CBC,\r\n                padding: CryptoJS.pad.Pkcs7\r\n            });\r\n\r\n            // 获取加密结果并转为 Hex 格式\r\n            let encryptedHex = encrypted.ciphertext.toString(CryptoJS.enc.Hex);\r\n            return encryptedHex.toUpperCase(); // 返回大写 Hex 格式\r\n        }\r\n        function Decrypt(word, key, iv) {\r\n            let encryptedHexStr = CryptoJS.enc.Hex.parse(word);\r\n\r\n            // 使用AES/CBC/PKCS5Padding模式进行解密\r\n            let decrypt = CryptoJS.AES.decrypt({\r\n                ciphertext: encryptedHexStr\r\n            }, key, {\r\n                iv: iv,\r\n                mode: CryptoJS.mode.CBC, // 使用CBC模式\r\n                padding: CryptoJS.pad.Pkcs7 // 使用PKCS#7填充\r\n            });\r\n\r\n            // 将解密后的数据转换为原始文本\r\n            let decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\r\n\r\n            // 返回解密后的文本\r\n            return decryptedStr;\r\n        }\r\n        function getbody3(key, t) {\r\n            var signature = 'token_id=,token=1be86e8e18a9fa18b2b8d5432699dad0.ac008ed650fd087bfbecf2fda9d82e9835253ef24843e6b18fcd128b10763497bcf9d53e959f5377cde038c20ccf9d17f604c9b8bb6e61041def86729b2fc7408bd241e23c213ac57f0226ee656e2bb0a583ae0e4f3bf6c6ab6c490c9a6f0d8cdfd366aacf5d83193671a8f77cd1af1ff2e9145de92ec43ec87cf4bdc563f6e919fe32861b0e93b118ec37d8035fbb3c.59dd05c5d9a8ae726528783128218f15fe6f2c0c8145eddab112b374fcfe3d79,phone_type=1,request_key=' + key + ',app_id=1,time=' + t + ',keys=qDpotE2bedimK3QGqlyV5ieXXC3EhaPLQ+IOJyHnHflCj5w/7ESK7FgywMvrgjxbx0GklEFLI4+JshgySe633OIRstuktwdiCy3CT+fLSpuxBJDIlfXQDaeH3ig1wiB0JsZ601XHiFweGMu4tZfnSpHg3OnoL6nz/uurUif2OK4=*&zvdvdvddbfikkkumtmdwqppp?|4Y!s!2br'; //log(signature)\r\n            var signature2 = md5(signature).toUpperCase(); //log(signature2)\r\n            var body = 'token=1be86e8e18a9fa18b2b8d5432699dad0.ac008ed650fd087bfbecf2fda9d82e9835253ef24843e6b18fcd128b10763497bcf9d53e959f5377cde038c20ccf9d17f604c9b8bb6e61041def86729b2fc7408bd241e23c213ac57f0226ee656e2bb0a583ae0e4f3bf6c6ab6c490c9a6f0d8cdfd366aacf5d83193671a8f77cd1af1ff2e9145de92ec43ec87cf4bdc563f6e919fe32861b0e93b118ec37d8035fbb3c.59dd05c5d9a8ae726528783128218f15fe6f2c0c8145eddab112b374fcfe3d79&token_id=&phone_type=1&time=' + t + '&phone_model=xiaomi-22021211rc&keys=qDpotE2bedimK3QGqlyV5ieXXC3EhaPLQ%2BIOJyHnHflCj5w%2F7ESK7FgywMvrgjxbx0GklEFLI4%2BJshgySe633OIRstuktwdiCy3CT%2BfLSpuxBJDIlfXQDaeH3ig1wiB0JsZ601XHiFweGMu4tZfnSpHg3OnoL6nz%2FuurUif2OK4%3D&request_key=' + key + '&signature=' + signature2 + '&app_id=1&ad_version=1';\r\n            return body\r\n        }\r\n        const bodykey = \"MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGAe6hKrWLi1zQmjTT1ozbE4QdFeJGNxubxld6GrFGximxfMsMB6BpJhpcTouAqywAFppiKetUBBbXwYsYU1wNr648XVmPmCMCy4rY8vdliFnbMUj086DU6Z+/oXBdWU3/b1G0DN3E9wULRSwcKZT3wj/cCI1vsCm3gj2R5SqkA9Y0CAwEAAQKBgAJH+4CxV0/zBVcLiBCHvSANm0l7HetybTh/j2p0Y1sTXro4ALwAaCTUeqdBjWiLSo9lNwDHFyq8zX90+gNxa7c5EqcWV9FmlVXr8VhfBzcZo1nXeNdXFT7tQ2yah/odtdcx+vRMSGJd1t/5k5bDd9wAvYdIDblMAg+wiKKZ5KcdAkEA1cCakEN4NexkF5tHPRrR6XOY/XHfkqXxEhMqmNbB9U34saTJnLWIHC8IXys6Qmzz30TtzCjuOqKRRy+FMM4TdwJBAJQZFPjsGC+RqcG5UvVMiMPhnwe/bXEehShK86yJK/g/UiKrO87h3aEu5gcJqBygTq3BBBoH2md3pr/W+hUMWBsCQQChfhTIrdDinKi6lRxrdBnn0Ohjg2cwuqK5zzU9p/N+S9x7Ck8wUI53DKm8jUJE8WAG7WLj/oCOWEh+ic6NIwTdAkEAj0X8nhx6AXsgCYRql1klbqtVmL8+95KZK7PnLWG/IfjQUy3pPGoSaZ7fdquG8bq8oyf5+dzjE/oTXcByS+6XRQJAP/5ciy1bL3NhUhsaOVy55MHXnPjdcTX0FaLi+ybXZIfIQ2P4rb19mVq1feMbCXhz+L1rG8oat5lYKfpe8k83ZA==\";\r\n        function gethtml(u, body, headers) {\r\n            var hd = fetch(u, {\r\n                headers: headers,\r\n                body: body,\r\n                method: 'POST',\r\n                rejectCoding: true\r\n            });\r\n            var banner = JSON.parse(hd).data;\r\n            var response_key = banner.response_key; //log()\r\n            var keys = banner.keys; //log(keys)\r\n            var bodykeyiv = JSON.parse(RSA.decode(keys, bodykey));\r\n            var key = CryptoJS.enc.Utf8.parse(bodykeyiv.key);\r\n            var iv = CryptoJS.enc.Utf8.parse(bodykeyiv.iv);\r\n            var html = Decrypt(response_key, key, iv);\r\n            return html\r\n        }\r\n        function hqsub(MY_CATE) {\r\n            var subs = [\"5\", \"12\", \"30\", \"22\", \"\"]\r\n            var tids = [\"1\", \"2\", \"4\", \"3\", \"64\"]\r\n            let index = tids.indexOf(MY_CATE);\r\n            if (index !== -1) {\r\n                return subs[index];\r\n            }\r\n            return \"\"; // 或者根据需要返回其他值\r\n        }\r\n        var headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Version': '2406025',\r\n            'PackageName': 'com.uf076bf0c246.qe439f0d5e.m8aaf56b725a.ifeb647346f',\r\n            'Ver': '1.9.2',\r\n            'Referer': 'https://api.8utdtcq.com',\r\n            'X-Customer-Client-Ip': '127.0.0.1',\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Host': 'api.8utdtcq.com',\r\n            'Connection': 'Keep-Alive',\r\n            //'Accept-Encoding': 'gzip',\r\n            'User-Agent': 'okhttp/3.12.0'\r\n        }\r\n        var tid = MY_CATE;\r\n        var sub = hqsub(MY_CATE)\r\n        var timestamp = new Date().getTime() / 1000;\r\n        var t = timestamp.toString().split('.')[0];\r\n        var request_key = JSON.stringify({ \"area\": (MY_FL.area || 0).toString(), \"sub\": (MY_FL.sub || sub).toString(), \"year\": (MY_FL.year || 0).toString(), \"pageSize\": \"30\", \"sort\": (MY_FL.sort || \"d_id\").toString(), \"page\": MY_PAGE, \"tid\": tid });\r\n        var request_key2 = Encrypt(request_key);\r\n        var body = getbody3(request_key2, t)\r\n        var html2 = gethtml(\"https://api.8utdtcq.com/App/IndexList/indexList\", body, headers)\r\n        //console.log(\"tttttlieb==\"+html2)\r\n        var list = JSON.parse(html2).list; //log(list)\r\n        list.forEach(data => {\r\n            d.push({\r\n                title: data.vod_name,\r\n                desc: data.vod_continu == 0 ? '电影' : '更新至'+data.vod_continu+'集',\r\n                year: data.vod_scroe,\r\n                img: data.vod_pic,\r\n                url: `${data.vod_id}/${data.vod_continu}`,\r\n            })\r\n        })\r\n        setResult(d)\r\n    ",
    二级: "js:\r\n        // var d = [];\r\n        function Encrypt(plainText) {\r\n            let key = CryptoJS.enc.Utf8.parse(\"mvXBSW7ekreItNsT\");\r\n            let iv = CryptoJS.enc.Utf8.parse(\"2U3IrJL8szAKp0Fj\");\r\n            // 将文本加密为 AES/CBC/PKCS5Padding 格式\r\n            let encrypted = CryptoJS.AES.encrypt(plainText, key, {\r\n                iv: iv,\r\n                mode: CryptoJS.mode.CBC,\r\n                padding: CryptoJS.pad.Pkcs7\r\n            });\r\n\r\n            // 获取加密结果并转为 Hex 格式\r\n            let encryptedHex = encrypted.ciphertext.toString(CryptoJS.enc.Hex);\r\n            return encryptedHex.toUpperCase(); // 返回大写 Hex 格式\r\n        }\r\n        function Decrypt(word, key, iv) {\r\n            let encryptedHexStr = CryptoJS.enc.Hex.parse(word);\r\n\r\n            // 使用AES/CBC/PKCS5Padding模式进行解密\r\n            let decrypt = CryptoJS.AES.decrypt({\r\n                ciphertext: encryptedHexStr\r\n            }, key, {\r\n                iv: iv,\r\n                mode: CryptoJS.mode.CBC, // 使用CBC模式\r\n                padding: CryptoJS.pad.Pkcs7 // 使用PKCS#7填充\r\n            });\r\n\r\n            // 将解密后的数据转换为原始文本\r\n            let decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\r\n\r\n            // 返回解密后的文本\r\n            return decryptedStr;\r\n        }\r\n        function getbody2(key, t) {\r\n            var signature = 'token_id=,token=1be86e8e18a9fa18b2b8d5432699dad0.ac008ed650fd087bfbecf2fda9d82e9835253ef24843e6b18fcd128b10763497bcf9d53e959f5377cde038c20ccf9d17f604c9b8bb6e61041def86729b2fc7408bd241e23c213ac57f0226ee656e2bb0a583ae0e4f3bf6c6ab6c490c9a6f0d8cdfd366aacf5d83193671a8f77cd1af1ff2e9145de92ec43ec87cf4bdc563f6e919fe32861b0e93b118ec37d8035fbb3c.59dd05c5d9a8ae726528783128218f15fe6f2c0c8145eddab112b374fcfe3d79,phone_type=1,request_key=' + key + ',app_id=1,time=' + t + ',keys=Qmxi5ciWXbQzkr7o+SUNiUuQxQEf8/AVyUWY4T/BGhcXBIUz4nOyHBGf9A4KbM0iKF3yp9M7WAY0rrs5PzdTAOB45plcS2zZ0wUibcXuGJ29VVGRWKGwE9zu2vLwhfgjTaaDpXo4rby+7GxXTktzJmxvneOUdYeHi+PZsThlvPI=*&zvdvdvddbfikkkumtmdwqppp?|4Y!s!2br'; //log(signature)\r\n            var signature2 = md5(signature); //log(signature2)\r\n            var body = 'token=1be86e8e18a9fa18b2b8d5432699dad0.ac008ed650fd087bfbecf2fda9d82e9835253ef24843e6b18fcd128b10763497bcf9d53e959f5377cde038c20ccf9d17f604c9b8bb6e61041def86729b2fc7408bd241e23c213ac57f0226ee656e2bb0a583ae0e4f3bf6c6ab6c490c9a6f0d8cdfd366aacf5d83193671a8f77cd1af1ff2e9145de92ec43ec87cf4bdc563f6e919fe32861b0e93b118ec37d8035fbb3c.59dd05c5d9a8ae726528783128218f15fe6f2c0c8145eddab112b374fcfe3d79&token_id=&phone_type=1&time=' + t + '&phone_model=xiaomi-22021211rc&keys=Qmxi5ciWXbQzkr7o%2BSUNiUuQxQEf8%2FAVyUWY4T%2FBGhcXBIUz4nOyHBGf9A4KbM0iKF3yp9M7WAY0rrs5PzdTAOB45plcS2zZ0wUibcXuGJ29VVGRWKGwE9zu2vLwhfgjTaaDpXo4rby%2B7GxXTktzJmxvneOUdYeHi%2BPZsThlvPI%3D&request_key=' + key + '&signature=' + signature2 + '&app_id=1&ad_version=1'; //log(body)\r\n            return body\r\n        }\r\n        const bodykey = \"MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGAe6hKrWLi1zQmjTT1ozbE4QdFeJGNxubxld6GrFGximxfMsMB6BpJhpcTouAqywAFppiKetUBBbXwYsYU1wNr648XVmPmCMCy4rY8vdliFnbMUj086DU6Z+/oXBdWU3/b1G0DN3E9wULRSwcKZT3wj/cCI1vsCm3gj2R5SqkA9Y0CAwEAAQKBgAJH+4CxV0/zBVcLiBCHvSANm0l7HetybTh/j2p0Y1sTXro4ALwAaCTUeqdBjWiLSo9lNwDHFyq8zX90+gNxa7c5EqcWV9FmlVXr8VhfBzcZo1nXeNdXFT7tQ2yah/odtdcx+vRMSGJd1t/5k5bDd9wAvYdIDblMAg+wiKKZ5KcdAkEA1cCakEN4NexkF5tHPRrR6XOY/XHfkqXxEhMqmNbB9U34saTJnLWIHC8IXys6Qmzz30TtzCjuOqKRRy+FMM4TdwJBAJQZFPjsGC+RqcG5UvVMiMPhnwe/bXEehShK86yJK/g/UiKrO87h3aEu5gcJqBygTq3BBBoH2md3pr/W+hUMWBsCQQChfhTIrdDinKi6lRxrdBnn0Ohjg2cwuqK5zzU9p/N+S9x7Ck8wUI53DKm8jUJE8WAG7WLj/oCOWEh+ic6NIwTdAkEAj0X8nhx6AXsgCYRql1klbqtVmL8+95KZK7PnLWG/IfjQUy3pPGoSaZ7fdquG8bq8oyf5+dzjE/oTXcByS+6XRQJAP/5ciy1bL3NhUhsaOVy55MHXnPjdcTX0FaLi+ybXZIfIQ2P4rb19mVq1feMbCXhz+L1rG8oat5lYKfpe8k83ZA==\";\r\n        function gethtml(u, body, headers) {\r\n            var hd = fetch(u, {\r\n                headers: headers,\r\n                body: body,\r\n                method: 'POST',\r\n                rejectCoding: true\r\n            });\r\n            var banner = JSON.parse(hd).data;\r\n            var response_key = banner.response_key; //log()\r\n            var keys = banner.keys; //log(keys)\r\n            var bodykeyiv = JSON.parse(RSA.decode(keys, bodykey));\r\n            var key = CryptoJS.enc.Utf8.parse(bodykeyiv.key);\r\n            var iv = CryptoJS.enc.Utf8.parse(bodykeyiv.iv);\r\n            var html = Decrypt(response_key, key, iv);\r\n            return html\r\n        }\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Version': '2406025',\r\n            'PackageName': 'com.uf076bf0c246.qe439f0d5e.m8aaf56b725a.ifeb647346f',\r\n            'Ver': '1.9.2',\r\n            'Referer': 'https://api.8utdtcq.com',\r\n            'X-Customer-Client-Ip': '127.0.0.1',\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Host': 'api.8utdtcq.com',\r\n            'Connection': 'Keep-Alive',\r\n            //'Accept-Encoding': 'gzip',\r\n            'User-Agent': 'okhttp/3.12.0'\r\n        }\r\n        // var MY_URL = MY_URL.split(\"##\")[1]; //log(MY_URL)\r\n        input = input.replace('https://api.8utdtcq.com/', '');\r\n        //console.log(\"input----====\"+input)\r\n\r\n        // var vod_continu = input.split(\"/\")[1]; //log(vod_id)\r\n        var vod_id = input.split(\"/\")[0];\r\n        //console.log(\"vod----====\"+vod_id)\r\n        var timestamp = new Date().getTime() / 1000;\r\n        var t = timestamp.toString().split('.')[0];\r\n        var request_key = JSON.stringify({\r\n            \"token_id\": \"393668\",\r\n            \"vod_id\": vod_id,\r\n            \"mobile_time\": t,\r\n            \"token\": \"1be86e8e18a9fa18b2b8d5432699dad0.ac008ed650fd087bfbecf2fda9d82e9835253ef24843e6b18fcd128b10763497bcf9d53e959f5377cde038c20ccf9d17f604c9b8bb6e61041def86729b2fc7408bd241e23c213ac57f0226ee656e2bb0a583ae0e4f3bf6c6ab6c490c9a6f0d8cdfd366aacf5d83193671a8f77cd1af1ff2e9145de92ec43ec87cf4bdc563f6e919fe32861b0e93b118ec37d8035fbb3c.59dd05c5d9a8ae726528783128218f15fe6f2c0c8145eddab112b374fcfe3d79\"\r\n        });\r\n        var request_key2 = Encrypt(request_key);\r\n        var body = getbody2(request_key2, t)\r\n        var html = gethtml(\"https://api.8utdtcq.com/App/IndexPlay/playInfo\", body, headers)\r\n        var data2 = JSON.parse(html).vodInfo; //console.log(\"hwudwudg-====\"+JSON.stringify(data2))\r\n        var request_key3 = JSON.stringify({\r\n            \"vurl_cloud_id\": \"2\",\r\n            \"vod_d_id\": vod_id\r\n        }); //log(request_key3)\r\n        var request_key4 = Encrypt(request_key3); //log(request_key4)\r\n        var body2 = getbody2(request_key4, t)\r\n\r\n        var html3 = gethtml(\"https://api.8utdtcq.com/App/Resource/Vurl/show\", body2, headers); //log(html3)\r\n\r\n        var list = JSON.parse(html3).list;\r\n        let nnnmm = [];\r\n        list.forEach(item => {\r\n            // 获取play对象的所有值\r\n            const playParams = Object.values(item.play);\r\n            let lastParam = null;\r\n\r\n            // 从数组的最后一个元素开始，向前查找，直到找到一个非空的param值\r\n            for (let i = playParams.length - 1; i >= 0; i--) {\r\n                if (playParams[i].param) {\r\n                    lastParam = playParams[i].param;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // 使用正则表达式匹配vurl_id\r\n            const vurlIdMatch = lastParam.match(/vurl_id=(\\d+)/);\r\n            const resolution=lastParam.match(/resolution=(\\d+)/);\r\n            // 如果匹配成功，将title和vurl_id组合后push到result数组\r\n            if (vurlIdMatch) {\r\n                nnnmm.push(`${item.title}$${vod_id}/${vurlIdMatch[1]}?${resolution[1]}`);\r\n            }\r\n        });\r\n        VOD = {\r\n            title: data2.vod_name,\r\n            type: data2.videoTag.toString(),\r\n            desc: data2.vod_use_content,\r\n            vod_actor: data2.vod_actor,\r\n            vod_area: data2.vod_area,\r\n            vod_director: data2.vod_director,\r\n            img: data2.vod_pic,\r\n            vod_play_from: '瓜子影视播放器',\r\n            vod_play_url: nnnmm.join('#')\r\n        }\r\n    ",
    搜索: "js:\r\n        let d = [];\r\n        function Encrypt(plainText) {\r\n            let key = CryptoJS.enc.Utf8.parse(\"mvXBSW7ekreItNsT\");\r\n            let iv = CryptoJS.enc.Utf8.parse(\"2U3IrJL8szAKp0Fj\");\r\n            // 将文本加密为 AES/CBC/PKCS5Padding 格式\r\n            let encrypted = CryptoJS.AES.encrypt(plainText, key, {\r\n                iv: iv,\r\n                mode: CryptoJS.mode.CBC,\r\n                padding: CryptoJS.pad.Pkcs7\r\n            });\r\n\r\n            // 获取加密结果并转为 Hex 格式\r\n            let encryptedHex = encrypted.ciphertext.toString(CryptoJS.enc.Hex);\r\n            return encryptedHex.toUpperCase(); // 返回大写 Hex 格式\r\n        }\r\n        function Decrypt(word, key, iv) {\r\n            let encryptedHexStr = CryptoJS.enc.Hex.parse(word);\r\n\r\n            // 使用AES/CBC/PKCS5Padding模式进行解密\r\n            let decrypt = CryptoJS.AES.decrypt({\r\n                ciphertext: encryptedHexStr\r\n            }, key, {\r\n                iv: iv,\r\n                mode: CryptoJS.mode.CBC, // 使用CBC模式\r\n                padding: CryptoJS.pad.Pkcs7 // 使用PKCS#7填充\r\n            });\r\n\r\n            // 将解密后的数据转换为原始文本\r\n            let decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\r\n\r\n            // 返回解密后的文本\r\n            return decryptedStr;\r\n        }\r\n        function getbody3(key, t) {\r\n            var signature = 'token_id=,token=1be86e8e18a9fa18b2b8d5432699dad0.ac008ed650fd087bfbecf2fda9d82e9835253ef24843e6b18fcd128b10763497bcf9d53e959f5377cde038c20ccf9d17f604c9b8bb6e61041def86729b2fc7408bd241e23c213ac57f0226ee656e2bb0a583ae0e4f3bf6c6ab6c490c9a6f0d8cdfd366aacf5d83193671a8f77cd1af1ff2e9145de92ec43ec87cf4bdc563f6e919fe32861b0e93b118ec37d8035fbb3c.59dd05c5d9a8ae726528783128218f15fe6f2c0c8145eddab112b374fcfe3d79,phone_type=1,request_key=' + key + ',app_id=1,time=' + t + ',keys=qDpotE2bedimK3QGqlyV5ieXXC3EhaPLQ+IOJyHnHflCj5w/7ESK7FgywMvrgjxbx0GklEFLI4+JshgySe633OIRstuktwdiCy3CT+fLSpuxBJDIlfXQDaeH3ig1wiB0JsZ601XHiFweGMu4tZfnSpHg3OnoL6nz/uurUif2OK4=*&zvdvdvddbfikkkumtmdwqppp?|4Y!s!2br'; //log(signature)\r\n            var signature2 = md5(signature); //log(signature2)\r\n            var body = 'token=1be86e8e18a9fa18b2b8d5432699dad0.ac008ed650fd087bfbecf2fda9d82e9835253ef24843e6b18fcd128b10763497bcf9d53e959f5377cde038c20ccf9d17f604c9b8bb6e61041def86729b2fc7408bd241e23c213ac57f0226ee656e2bb0a583ae0e4f3bf6c6ab6c490c9a6f0d8cdfd366aacf5d83193671a8f77cd1af1ff2e9145de92ec43ec87cf4bdc563f6e919fe32861b0e93b118ec37d8035fbb3c.59dd05c5d9a8ae726528783128218f15fe6f2c0c8145eddab112b374fcfe3d79&token_id=&phone_type=1&time=' + t + '&phone_model=xiaomi-22021211rc&keys=qDpotE2bedimK3QGqlyV5ieXXC3EhaPLQ%2BIOJyHnHflCj5w%2F7ESK7FgywMvrgjxbx0GklEFLI4%2BJshgySe633OIRstuktwdiCy3CT%2BfLSpuxBJDIlfXQDaeH3ig1wiB0JsZ601XHiFweGMu4tZfnSpHg3OnoL6nz%2FuurUif2OK4%3D&request_key=' + key + '&signature=' + signature2 + '&app_id=1&ad_version=1';\r\n            return body\r\n        }\r\n        const bodykey = \"MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGAe6hKrWLi1zQmjTT1ozbE4QdFeJGNxubxld6GrFGximxfMsMB6BpJhpcTouAqywAFppiKetUBBbXwYsYU1wNr648XVmPmCMCy4rY8vdliFnbMUj086DU6Z+/oXBdWU3/b1G0DN3E9wULRSwcKZT3wj/cCI1vsCm3gj2R5SqkA9Y0CAwEAAQKBgAJH+4CxV0/zBVcLiBCHvSANm0l7HetybTh/j2p0Y1sTXro4ALwAaCTUeqdBjWiLSo9lNwDHFyq8zX90+gNxa7c5EqcWV9FmlVXr8VhfBzcZo1nXeNdXFT7tQ2yah/odtdcx+vRMSGJd1t/5k5bDd9wAvYdIDblMAg+wiKKZ5KcdAkEA1cCakEN4NexkF5tHPRrR6XOY/XHfkqXxEhMqmNbB9U34saTJnLWIHC8IXys6Qmzz30TtzCjuOqKRRy+FMM4TdwJBAJQZFPjsGC+RqcG5UvVMiMPhnwe/bXEehShK86yJK/g/UiKrO87h3aEu5gcJqBygTq3BBBoH2md3pr/W+hUMWBsCQQChfhTIrdDinKi6lRxrdBnn0Ohjg2cwuqK5zzU9p/N+S9x7Ck8wUI53DKm8jUJE8WAG7WLj/oCOWEh+ic6NIwTdAkEAj0X8nhx6AXsgCYRql1klbqtVmL8+95KZK7PnLWG/IfjQUy3pPGoSaZ7fdquG8bq8oyf5+dzjE/oTXcByS+6XRQJAP/5ciy1bL3NhUhsaOVy55MHXnPjdcTX0FaLi+ybXZIfIQ2P4rb19mVq1feMbCXhz+L1rG8oat5lYKfpe8k83ZA==\";\r\n        function gethtml(u, body, headers) {\r\n            var hd = fetch(u, {\r\n                headers: headers,\r\n                body: body,\r\n                method: 'POST',\r\n                rejectCoding: true\r\n            });\r\n            var banner = JSON.parse(hd).data;\r\n            var response_key = banner.response_key; //log()\r\n            //console.log(\"response_key==\"+response_key)\r\n            var keys = banner.keys; //log(keys)\r\n            var bodykeyiv = JSON.parse(RSA.decode(keys, bodykey));\r\n            //console.log(\"rsaxxxx==\"+JSON.stringify(bodykeyiv))\r\n            var key = CryptoJS.enc.Utf8.parse(bodykeyiv.key);\r\n            var iv = CryptoJS.enc.Utf8.parse(bodykeyiv.iv);\r\n            var html = Decrypt(response_key, key, iv);\r\n            //console.log(\"nskjsnwkjdnejd===qqxxxq=\"+JSON.stringify(html))\r\n            return html\r\n        }\r\n        var timestamp = new Date().getTime() / 1000;\r\n        var t = timestamp.toString().split('.')[0];\r\n        var url = input.split(\"#\")[0];//url\r\n        var request_key11 = input.split(\"#\")[1]\r\n\r\n        var request_key = JSON.stringify({ \"keywords\": request_key11, \"order_val\": \"1\" })\r\n        //console.log(\"nskjsnwkjdnejd===qqxxxq=tttt\"+request_key)\r\n        var request_key2 = Encrypt(request_key);\r\n        var body = getbody3(request_key2, t)\r\n        var headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Version': '2406025',\r\n            'PackageName': 'com.uf076bf0c246.qe439f0d5e.m8aaf56b725a.ifeb647346f',\r\n            'Ver': '1.9.2',\r\n            'Referer': 'https://api.8utdtcq.com',\r\n            'X-Customer-Client-Ip': '127.0.0.1',\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Host': 'api.8utdtcq.com',\r\n            'Connection': 'Keep-Alive',\r\n            'User-Agent': 'okhttp/3.12.0'\r\n        }\r\n        var html = gethtml(url, body, headers)\r\n        //console.log(\"nskjsnwkjdnejd====\"+html)\r\n\r\n        var list = JSON.parse(html).list; //log(list)\r\n        //console.log(\"nskjsnwkjdnejd===qqqqq=\"+list)\r\n        list.forEach(data => {\r\n            d.push({\r\n                title: data.vod_name,\r\n                desc: data.vod_continu == 0 ? '电影' : '更新至'+data.vod_continu+'集',\r\n                content: data.vod_addtime,\r\n                img: data.vod_pic,\r\n                url: `${data.vod_id}/${data.vod_continu}`,\r\n            })\r\n        })\r\n        setResult(d)\r\n    ",
  }